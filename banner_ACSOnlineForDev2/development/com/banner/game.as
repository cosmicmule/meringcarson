package  com.banner{	import flash.display.MovieClip;	import flash.events.Event;	import com.greensock.TweenLite;	import flash.display.Stage			public class game extends MovieClip{				private var parentClass:Object;		private var car:game_car = new game_car();		private var carCleanup:Array = [];		private var gui:ui = new ui();		private var activeRaceCars:Array = [];		private var rank:Number = 11;		private var speed:Number = 0;		private var speedMax:Number = 50;		// game messages		private var textLock_world_record_mc:Boolean = false;		private var textLock_1stplace:Boolean = false;		private var textLock_nerves_of_steel:Boolean = false;		private var carGen:Boolean = true;		private var car_crashed:Boolean = false;		// car start / end positions		private var othercar_Start_X:Number = 35;		private var othercar_Start_Y:Number = 280;				private var othercar_End_X:Number = 100;		private var othercar_End_Y:Number = 186;				public function game(ref:Object = null):void {			parentClass = ref;		}				public function playgame():void {			game_setup();		}				private function game_setup(e:Event = null):void{						// add car to stage			car.y = 40;			car.scaleX = 0.7;			car.scaleY = 0.7;			addChild(car);			car.stop();						// scoreboard Element			gui.scoreboard.alpha = 1;						// mavtv logo			gui.mavtv.alpha = 0;						gui.x = 10;			gui.y = 10;			addChild(gui);						TweenLite.from(gui.swipe, .5, {x:stage.stageWidth + 50,onComplete:remove_swipe,delay:.5});			this.addEventListener(Event.ENTER_FRAME,gametracking);		}				private function remove_swipe():void{			// stage tracking			TweenLite.to(gui.swipe, .5, {x:(stage.stageWidth + 50), delay:2});			TweenLite.to(gui.scoreboard, .5, {alpha:(1), delay:3});			TweenLite.to(gui.mavtv, .5, {alpha:(1), delay:3, onComplete:start_generating_cars});			//start_generating_cars();		}				private function start_generating_cars(){			// this is the starting car generator, this will only fire once. check onComplete to understand rest			// of car functionaity.			if(carGen){			var OtherCars:game_car = new game_car();				carCleanup.push(OtherCars);								OtherCars.y = 35;				OtherCars.x = randomRange(280,450);				OtherCars.scaleX = 0.1;				OtherCars.scaleY = 0.1;				addChild(OtherCars);				TweenLite.to(OtherCars, randomRange(2,4), {x:car.x,y:120,scaleX:1,scaleY:1,onComplete:update_scoreboard});							}					}				private function update_scoreboard(){									if(rank != 1){				rank = updateRank();			}						gui.scoreboard.rankTxt.text = rank + " TH";			speedMax = speed + 33;			start_generating_cars();					}				private function kill_generating_cars(e:*,my_title:String){						if(my_title =="endgame"){				TweenLite.to(e, .5, {x:-400,alpha:0,delay:6,onComplete:endgame});			}else{				TweenLite.to(e, .5, {x:-400,alpha:0,delay:2});				TweenLite.to(gui.scoreboard, .5, {alpha:1,delay:2});			}					}										private function gametracking(e:Event):void{						// car collision detection			for(var detect:Number = 0; detect <carCleanup.length; detect++){				if(car.hitTestObject(carCleanup[detect]))				{				   	car.gotoAndStop(2);					var mphTitle:* = new failed();					mphTitle.y = 36;					mphTitle.x = -400;					mphTitle.alpha = 0;					gui.message_Display.addChild(mphTitle);					textLock_world_record_mc = true;					TweenLite.to(mphTitle, .5, {x:0,alpha:1,delay:0,onComplete:kill_generating_cars,onCompleteParams:[mphTitle,"endgame"]});					TweenLite.to(gui.scoreboard, .5, {alpha:0});					this.removeEventListener(Event.ENTER_FRAME,gametracking);					carGen = false;				}			}															// car movement			car.x = (mouseX);						// manage car speed			if(rank == 1 ){				if(textLock_1stplace == false){												mphTitle = new first_place();						mphTitle.y = 36;						mphTitle.x = -500;						gui.message_Display.addChild(mphTitle)						textLock_1stplace = true;						TweenLite.to(mphTitle, .5, {x:0,alpha:1,delay:1,onComplete:kill_generating_cars,onCompleteParams:[mphTitle,"endgame"]});						TweenLite.to(gui.scoreboard, .5, {alpha:0});						carGen = false;										}			}else if(speed < speedMax && speed <= 265 && rank !=1){				speed = updateSpeed(1)				gui.scoreboard.speedTxt.text = speed;							}else if(speed > 265 ){					if(textLock_world_record_mc == false){						mphTitle = new world_record_mc();						mphTitle.y = 36;						mphTitle.x = -400;						mphTitle.alpha = 0;						gui.message_Display.addChild(mphTitle);						textLock_world_record_mc = true;						TweenLite.to(mphTitle, .5, {x:0,alpha:1,delay:1,onComplete:kill_generating_cars,onCompleteParams:[mphTitle,"title"]});						TweenLite.to(gui.scoreboard, .5, {alpha:0});					}							}else if(rank == 8 ){				if(textLock_nerves_of_steel == false){						mphTitle = new nerves_of_steel();						mphTitle.y = 26;						mphTitle.x = -400;						mphTitle.alpha = 0;						gui.message_Display.addChild(mphTitle)						textLock_nerves_of_steel = true;						TweenLite.to(mphTitle, .5, {x:0,alpha:1,delay:1,onComplete:kill_generating_cars,onCompleteParams:[mphTitle,"title"]});						TweenLite.to(gui.scoreboard, .5, {alpha:0});																}			}								}				// end the game		private function endgame():void {			// ending message goes here			this.addEventListener(Event.ENTER_FRAME,gametracking);			TweenLite.to(car, 1, {alpha:0});			TweenLite.to(gui, 1, {alpha:0});			TweenLite.delayedCall(2, continueBanner);		}				// call parent class and contie animating banners		private function continueBanner():void {			parentClass.continueBanner();					}				// random number generator		private function randomRange(minNum:Number, maxNum:Number):Number 		{			return (Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum);		}				// adjust rank display in gui		private function updateRank():Number{			return rank-1;		}				// adjust speed display in gui		private function updateSpeed(customInt:Number = 20):Number{			return speed += customInt;		}							}	}